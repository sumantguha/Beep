{"ast":null,"code":"import React from 'react';\nimport { ChakraProvider, Box, Text, Link, VStack, Code, Grid, theme } from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport ReactApexChart from 'apexcharts'; // function App() {\n//   const [temperature, setTemperature] = React.useState(0)\n//   const [breathing, setBreathing] = React.useState([])\n//   const [timer, setTimer] = React.useState(null)\n//   const [isMounted, setIsMounted] = React.useState(false)\n//   async function getData () {\n//     try {\n//       const result = await fetch('http://localhost:5000/app')\n//       const data = await result.json()\n//       data.forEach(function (item, index) {\n//         if (item.type === 'Temperature') {\n//           setTemperature(item.value)\n//         } else if (item.type === 'Breathing') {\n//           setBreathing(breathing => [...breathing, item.value])\n//         }\n//       });\n//     } catch (e) {\n//       console.error(e)\n//     }\n//     clearTimeout(timer)\n//     setTimer(setTimeout(getData, 500))\n//   }\n//   React.useEffect(() => {\n//     getData();\n//   }, []);\n//   const state = {     \n//     series: [{\n//       data: breathing.slice()\n//     }],\n//     options: {\n//       chart: {\n//         id: 'realtime',\n//         height: 350,\n//         type: 'line',\n//         animations: {\n//           enabled: true,\n//           easing: 'linear',\n//           dynamicAnimation: {\n//             speed: 1000\n//           }\n//         },\n//         toolbar: {\n//           show: false\n//         },\n//         zoom: {\n//           enabled: false\n//         }\n//       },\n//       dataLabels: {\n//         enabled: false\n//       },\n//       stroke: {\n//         curve: 'smooth'\n//       },\n//       title: {\n//         text: 'Breathing Rate',\n//         align: 'left'\n//       },\n//       markers: {\n//         size: 0\n//       },\n//       // xaxis: {\n//       //   type: 'datetime',\n//       //   range: XAXISRANGE,\n//       // },\n//       // yaxis: {\n//       //   max: 100\n//       // },\n//       legend: {\n//         show: false\n//       },\n//     },\n//   };\n//   return (\n//     <ChakraProvider theme={theme}>\n//       <Box textAlign=\"center\" fontSize=\"xl\">\n//         <Grid minH=\"100vh\" p={3}>\n//           <ColorModeSwitcher justifySelf=\"flex-end\" />\n//           <VStack spacing={8}>\n//             <p>Temperature: {temperature}</p>\n//             <p>Breathing: {breathing}</p>\n//             {/* Create line graph of breathing using ApexChart*/}\n//             <ReactApexChart options={state.options} series={state.series} type=\"line\" height={350} />\n//           </VStack>\n//         </Grid>\n//       </Box>\n//     </ChakraProvider>\n//   );\n// }\n\nexport default App;","map":{"version":3,"sources":["/Users/sumant/Desktop/work/beep/client/src/App.js"],"names":["React","ChakraProvider","Box","Text","Link","VStack","Code","Grid","theme","ColorModeSwitcher","ReactApexChart","App"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,cADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,IANF,EAOEC,IAPF,EAQEC,KARF,QASO,kBATP;AAUA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,OAAOC,cAAP,MAA2B,YAA3B,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,GAAf","sourcesContent":["import React from 'react';\nimport {\n  ChakraProvider,\n  Box,\n  Text,\n  Link,\n  VStack,\n  Code,\n  Grid,\n  theme,\n} from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\n\nimport ReactApexChart from 'apexcharts';\n\n// function App() {\n//   const [temperature, setTemperature] = React.useState(0)\n//   const [breathing, setBreathing] = React.useState([])\n//   const [timer, setTimer] = React.useState(null)\n//   const [isMounted, setIsMounted] = React.useState(false)\n\n//   async function getData () {\n//     try {\n//       const result = await fetch('http://localhost:5000/app')\n//       const data = await result.json()\n//       data.forEach(function (item, index) {\n//         if (item.type === 'Temperature') {\n//           setTemperature(item.value)\n//         } else if (item.type === 'Breathing') {\n//           setBreathing(breathing => [...breathing, item.value])\n\n//         }\n//       });\n//     } catch (e) {\n//       console.error(e)\n//     }\n//     clearTimeout(timer)\n//     setTimer(setTimeout(getData, 500))\n//   }\n  \n//   React.useEffect(() => {\n//     getData();\n//   }, []);\n\n//   const state = {     \n//     series: [{\n//       data: breathing.slice()\n//     }],\n//     options: {\n//       chart: {\n//         id: 'realtime',\n//         height: 350,\n//         type: 'line',\n//         animations: {\n//           enabled: true,\n//           easing: 'linear',\n//           dynamicAnimation: {\n//             speed: 1000\n//           }\n//         },\n//         toolbar: {\n//           show: false\n//         },\n//         zoom: {\n//           enabled: false\n//         }\n//       },\n//       dataLabels: {\n//         enabled: false\n//       },\n//       stroke: {\n//         curve: 'smooth'\n//       },\n//       title: {\n//         text: 'Breathing Rate',\n//         align: 'left'\n//       },\n//       markers: {\n//         size: 0\n//       },\n//       // xaxis: {\n//       //   type: 'datetime',\n//       //   range: XAXISRANGE,\n//       // },\n//       // yaxis: {\n//       //   max: 100\n//       // },\n//       legend: {\n//         show: false\n//       },\n//     },\n//   };\n\n//   return (\n//     <ChakraProvider theme={theme}>\n//       <Box textAlign=\"center\" fontSize=\"xl\">\n//         <Grid minH=\"100vh\" p={3}>\n//           <ColorModeSwitcher justifySelf=\"flex-end\" />\n//           <VStack spacing={8}>\n//             <p>Temperature: {temperature}</p>\n//             <p>Breathing: {breathing}</p>\n//             {/* Create line graph of breathing using ApexChart*/}\n//             <ReactApexChart options={state.options} series={state.series} type=\"line\" height={350} />\n//           </VStack>\n//         </Grid>\n//       </Box>\n//     </ChakraProvider>\n//   );\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}